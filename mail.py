## Author : Slyker
## Github : https://github.com/MrSlyker
## Version : 1.1.0
## Donate : https://saweria.co/slyker

import base64
exec(base64.b64decode('ZnJvbSBiczQgaW1wb3J0IEJlYXV0aWZ1bFNvdXAKaW1wb3J0IHJlcXVlc3RzCmltcG9ydCB0aW1lCmltcG9ydCBqc29uCmltcG9ydCBvcwoKbGlzdERvbWFpbiA9IFsKJ21haWxzYWMuY29tJywKJ2xlZG9rdHJlLmNvbScsCidzbG90aG1haWwubmV0JywKJ3RvdGFsdmlzdGEuY29tJywKJ2R3ZWV6bGVtYWlsLmNyYWJkYW5jZS5jb20nCl0KCmtleSA9ICdrX0JSMzFhdUhHOUlhdEJ2eWdSTDkwYkQ2cGdydVE4ZDZISVZSV3pCNnU1UnBjZjMnCmhlYWRlcnM9eydNYWlsc2FjLUtleSc6IGtleX0KCm1lc3NhZ2UgPSBbMF0KdG90YWwgPSBbMF0KCmRlZiBkdW1wTWVzc2FnZShlbWFpbCwgaWQsIGNvdW50KToKICB0cnk6CiAgICBodHRwID0gcmVxdWVzdHMuZ2V0KGYnaHR0cHM6Ly9tYWlsc2FjLmNvbS9hcGkvdGV4dC97ZW1haWx9L3tpZH0nLCBoZWFkZXJzPWhlYWRlcnMpCiAgICByZXMgPSBCZWF1dGlmdWxTb3VwKGh0dHAuY29udGVudCwgJ2h0bWwucGFyc2VyJykKICAgIGh0dHAgPSByZXF1ZXN0cy5nZXQoZidodHRwczovL21haWxzYWMuY29tL2FwaS9hZGRyZXNzZXMve2VtYWlsfS9tZXNzYWdlcy97aWR9JywgaGVhZGVycz1oZWFkZXJzKQogICAgcmVzdWx0ID0ganNvbi5sb2FkcyhodHRwLmNvbnRlbnQpCiAgICBwcmludCgnTWVzc2FnZSAnICsgc3RyKGNvdW50KSkKICAgIHByaW50KCdbK10gSWQgOiAnICsgcmVzdWx0WydfaWQnXSkKICAgIHByaW50KCdbK10gRGF0ZSA6ICcgKyByZXN1bHRbJ3JlY2VpdmVkJ10pCiAgICBwcmludCgnWytdIEZyb20gOiAnICsgcmVzdWx0Wydmcm9tJ11bMF1bJ2FkZHJlc3MnXSkKICAgIHByaW50KCdbK10gTmFtZSA6ICcgKyByZXN1bHRbJ2Zyb20nXVswXVsnbmFtZSddKQogICAgcHJpbnQoJ1srXSBUbyA6ICcgKyByZXN1bHRbJ3RvJ11bMF1bJ2FkZHJlc3MnXSkKICAgIHByaW50KCdbK10gU3ViamVjdCA6ICcgKyByZXN1bHRbJ3N1YmplY3QnXSkKICAgIHByaW50KCdbK10gTWVzc2FnZSA6ICcgKyBzdHIocmVzLnRleHQpKQogIGV4Y2VwdCByZXF1ZXN0cy5Db25uZWN0aW9uRXJyb3I6CiAgICBwcmludCgnWyFdIE5ldHdvcmsgZGlzY29ubmVjdGVkJykKICAgIHRpbWUuc2xlZXAoMSkKICAgIGV4aXQoKQogIGV4Y2VwdCBLZXlib2FyZEludGVycnVwdDoKICAgIHByaW50KCdcblshXSBDVFJMICsgQyBERVRFQ1RFRCcpCiAgICB0aW1lLnNsZWVwKDEpCiAgICBleGl0KCkKCmRlZiBjaGVja01lc3NhZ2UoZW1haWwpOgogIHRyeToKICAgIGh0dHAgPSByZXF1ZXN0cy5nZXQoZidodHRwczovL21haWxzYWMuY29tL2FwaS9hZGRyZXNzZXMve2VtYWlsfS9tZXNzYWdlLWNvdW50JywgaGVhZGVycz1oZWFkZXJzKQogICAgcmVzdWx0ID0ganNvbi5sb2FkcyhodHRwLmNvbnRlbnQpCiAgICBtZXNzYWdlLmFwcGVuZChyZXN1bHRbJ2NvdW50J10pCiAgICBwcmludCgnWytdIFlvdXIgRW1haWwgOiAnICsgcmVzdWx0WydpbmJveCddKQogICAgdGltZS5zbGVlcCgxKQogICAgcHJpbnQoJ1srXSBNZXNzYWdlIDogJyArIHN0cihyZXN1bHRbJ2NvdW50J10pKQogICAgdHJ5OgogICAgICBodHRwID0gcmVxdWVzdHMuZ2V0KGYnaHR0cHM6Ly9tYWlsc2FjLmNvbS9hcGkvYWRkcmVzc2VzL3tlbWFpbH0vbWVzc2FnZXMnLCBoZWFkZXJzPWhlYWRlcnMpCiAgICAgIHJlc3VsdCA9IGpzb24ubG9hZHMoaHR0cC5jb250ZW50KQogICAgICBodHRwID0gcmVxdWVzdHMuZ2V0KGYnaHR0cHM6Ly9tYWlsc2FjLmNvbS9hcGkvYWRkcmVzc2VzL3tlbWFpbH0vbWVzc2FnZS1jb3VudCcsIGhlYWRlcnM9aGVhZGVycykKICAgICAgcmVzID0ganNvbi5sb2FkcyhodHRwLmNvbnRlbnQpCiAgICAgIHByaW50KCcnKQogICAgICBmb3IgcmVzdWx0IGluIHJlc3VsdDoKICAgICAgICB0b3RhbFswXSA9IHRvdGFsWzBdICsgMQogICAgICAgIG1lc3NhZ2VbMF0gPSByZXNbJ2NvdW50J10KICAgICAgICBkdW1wTWVzc2FnZShlbWFpbCwgcmVzdWx0WydfaWQnXSwgdG90YWxbMF0pCiAgICAgIHdoaWxlKCBUcnVlICk6CiAgICAgICAgaHR0cCA9IHJlcXVlc3RzLmdldChmJ2h0dHBzOi8vbWFpbHNhYy5jb20vYXBpL2FkZHJlc3Nlcy97ZW1haWx9L21lc3NhZ2UtY291bnQnLCBoZWFkZXJzPWhlYWRlcnMpCiAgICAgICAgcmVzdWx0ID0ganNvbi5sb2FkcyhodHRwLmNvbnRlbnQpCiAgICAgICAgaWYgcmVzdWx0Wydjb3VudCddID09IDg6CiAgICAgICAgICBtZXNzYWdlWzBdID0gcmVzdWx0Wydjb3VudCddCiAgICAgICAgICB0aW1lLnNsZWVwKDEpCiAgICAgICAgICBtZXNzYWdlWzBdID0gcmVzdWx0Wydjb3VudCddCiAgICAgICAgICBtZXNzYWdlWzBdID0gcmVzdWx0Wydjb3VudCddCiAgICAgICAgaWYgcmVzdWx0Wydjb3VudCddICE9IG1lc3NhZ2VbMF06CiAgICAgICAgICBtZXNzYWdlWzBdID0gcmVzdWx0Wydjb3VudCddCiAgICAgICAgICBwcmludCgnWytdIFlvdSBnZXQgYSBtZXNzYWdlJykKICAgICAgICAgIHByaW50KCdbK10gTWVzc2FnZSA6ICcgKyBzdHIocmVzdWx0Wydjb3VudCddKSkKICAgICAgICAgIHByaW50KCcnKQogICAgICAgICAgdGltZS5zbGVlcCgxKQogICAgICAgICAgaHR0cCA9IHJlcXVlc3RzLmdldChmJ2h0dHBzOi8vbWFpbHNhYy5jb20vYXBpL2FkZHJlc3Nlcy97ZW1haWx9L21lc3NhZ2UtY291bnQnLCBoZWFkZXJzPWhlYWRlcnMpCiAgICAgICAgICByZXMgPSBqc29uLmxvYWRzKGh0dHAuY29udGVudCkKICAgICAgICAgIGh0dHAgPSByZXF1ZXN0cy5nZXQoZidodHRwczovL21haWxzYWMuY29tL2FwaS9hZGRyZXNzZXMve2VtYWlsfS9tZXNzYWdlcycsIGhlYWRlcnM9aGVhZGVycykKICAgICAgICAgIHJlc3VsdCA9IGpzb24ubG9hZHMoaHR0cC5jb250ZW50KQogICAgICAgICAgY291bnQgPSByZXNbJ2NvdW50J10KICAgICAgICAgIGlkID0gcmVzdWx0WzBdWydfaWQnXQogICAgICAgICAgdG90YWxbMF0gPSB0b3RhbFswXSArIDEKICAgICAgICAgIGR1bXBNZXNzYWdlKGVtYWlsLCBpZCwgdG90YWxbMF0pCiAgICBleGNlcHQgcmVxdWVzdHMuQ29ubmVjdGlvbkVycm9yOgogICAgICBwcmludCgnWyFdIE5ldHdvcmsgZGlzY29ubmVjdGVkJykKICAgICAgdGltZS5zbGVlcCgxKQogICAgICBleGl0KCkKICAgIGV4Y2VwdCBLZXlib2FyZEludGVycnVwdDoKICAgICAgcHJpbnQoJ1xuWyFdIENUUkwgKyBDIERFVEVDVEVEJykKICAgICAgdGltZS5zbGVlcCgxKQogICAgICBleGl0KCkKICBleGNlcHQgcmVxdWVzdHMuQ29ubmVjdGlvbkVycm9yOgogICAgcHJpbnQoJ1shXSBOZXR3b3JrIGRpc2Nvbm5lY3RlZCcpCiAgICB0aW1lLnNsZWVwKDEpCiAgICBleGl0KCkKICBleGNlcHQgS2V5Ym9hcmRJbnRlcnJ1cHQ6CiAgICBwcmludCgnXG5bIV0gQ1RSTCArIEMgREVURUNURUQnKQogICAgdGltZS5zbGVlcCgxKQogICAgZXhpdCgpCgpkZWYgY3JlYXRlRW1haWwoZW1haWwpOgogIHRyeToKICAgIGh0dHAgPSByZXF1ZXN0cy5nZXQoZidodHRwczovL21haWxzYWMuY29tL2FwaS9hZGRyZXNzZXMve2VtYWlsfScsIGhlYWRlcnM9aGVhZGVycykKICAgIHJlc3VsdCA9IGpzb24ubG9hZHMoaHR0cC5jb250ZW50KQogICAgaWYgcmVzdWx0WydfaWQnXSA9PSBlbWFpbDoKICAgICAgcHJpbnQoJ1srXSBFbWFpbCBjcmVhdGVkIHN1Y2Nlc3NmdWxseScpCiAgICAgIHRpbWUuc2xlZXAoMikKICAgICAgb3Muc3lzdGVtKCdjbGVhcicpCiAgICAgIHRpbWUuc2xlZXAoMSkKICAgICAgcHJpbnQoJ1srXSBFbWFpbCBpZCA6ICcgKyByZXN1bHRbJ19pZCddKQogICAgICB0aW1lLnNsZWVwKDEpCiAgICAgIHByaW50KCdbK10gRW5jcnlwdGVkIEluYm94IDogJyArIHJlc3VsdFsnZW5jcnlwdGVkSW5ib3gnXSkKICAgICAgdGltZS5zbGVlcCgyKQogICAgICBjaGVja01lc3NhZ2UoZW1haWwpCiAgZXhjZXB0IHJlcXVlc3RzLkNvbm5lY3Rpb25FcnJvcjoKICAgICAgcHJpbnQoJ1shXSBOZXR3b3JrIGRpc2Nvbm5lY3RlZCcpCiAgICAgIHRpbWUuc2xlZXAoMSkKICAgICAgZXhpdCgpCiAgZXhjZXB0IEtleWJvYXJkSW50ZXJydXB0OgogICAgcHJpbnQoJ1xuWyFdIENUUkwgKyBDIERFVEVDVEVEJykKICAgIHRpbWUuc2xlZXAoMSkKICAgIGV4aXQoKQoKZGVmIGNoZWNrQXZhaWxhYmlsaXR5KGVtYWlsKToKICB0cnk6CiAgICBodHRwID0gcmVxdWVzdHMuZ2V0KCdodHRwczovL21haWxzYWMuY29tL2FwaS92YWxpZGF0aW9ucy9hZGRyZXNzZXMvc2x5a2VycG13QG1haWxpbmF0b3IuY29tJywgaGVhZGVycz1oZWFkZXJzKQogICAgcmVzdWx0ID0ganNvbi5sb2FkcyhodHRwLmNvbnRlbnQpCiAgICBpZiByZXN1bHRbJ2lzRGlzcG9zYWJsZSddID09IFRydWU6CiAgICAgIHByaW50KCdbK10gVGhpcyBlbWFpbCBpcyBhdmFpbGFibGUnKQogICAgICB0aW1lLnNsZWVwKDEpCiAgICAgIHByaW50KCdbK10gQ3JlYXRpbmcgZW1haWwgYWRkcmVzcycpCiAgICAgIHRpbWUuc2xlZXAoMSkKICAgICAgY3JlYXRlRW1haWwoZW1haWwpCiAgICBlbHNlOgogICAgICBwcmludCgnWyFdIFRoaXMgZW1haWwgaXMgbm90IGF2YWlsYWJsZScpCiAgICAgIHRpbWUuc2xlZXAoMSkKICAgICAgZXhpdCgpCiAgZXhjZXB0IHJlcXVlc3RzLkNvbm5lY3Rpb25FcnJvcjoKICAgIHByaW50KCdbIV0gTmV0d29yayBkaXNjb25uZWN0ZWQnKQogICAgdGltZS5zbGVlcCgxKQogICAgZXhpdCgpCiAgZXhjZXB0IEtleWJvYXJkSW50ZXJydXB0OgogICAgcHJpbnQoJ1xuWyFdIENUUkwgKyBDIERFVEVDVEVEJykKICAgIHRpbWUuc2xlZXAoMSkKICAgIGV4aXQoKQoKdHJ5OgogIG9zLnN5c3RlbSgnY2xlYXInKQogIG5hbWUgPSBpbnB1dChmJ1srXSBOYW1lIDogJykKICBpZiBuYW1lID09ICIiOgogICAgcHJpbnQoJ1shXSBOYW1lIGNhbm5vdCBiZSBlbXB0eScpCiAgICB0aW1lLnNsZWVwKDEpCiAgICBleGl0KCkKICBpZiAnQCcgaW4gbmFtZToKICAgIHByaW50KCdbIV0gSW52YWxpZCBuYW1lJykKICAgIHRpbWUuc2xlZXAoMSkKICAgIGV4aXQoKQogIHByaW50KCcnKQogIGZvciBkb21haW4gaW4gcmFuZ2UobGVuKGxpc3REb21haW4pKToKICAgIHRpbWUuc2xlZXAoMSkKICAgIGNvdW50ID0gZG9tYWluICsgMQogICAgcHJpbnQoZidbe2NvdW50fV0ge25hbWV9QHtsaXN0RG9tYWluW2RvbWFpbl19JykKICB0aW1lLnNsZWVwKDEpCiAgZG9tYWluID0gaW50KGlucHV0KCdcblsrXSBTZWxlY3QgZW1haWwgYWRkcmVzcyA6ICcpKQogIGVtYWlsID0gZid7bmFtZX1Ae2xpc3REb21haW5bZG9tYWluIC0gMV19JwogIHRpbWUuc2xlZXAoMSkKICBwcmludChmJ1srXSBjaGVja2luZyBhdmFpbGFiaWxpdHkge2VtYWlsfScpCiAgY2hlY2tBdmFpbGFiaWxpdHkoZW1haWwpCmV4Y2VwdCBWYWx1ZUVycm9yOgogIHByaW50KCdbIV0gSW52YWxpZCBpbnB1dCcpCiAgdGltZS5zbGVlcCgxKQogIGV4aXQoKQpleGNlcHQgSW5kZXhFcnJvcjoKICBwcmludCgnWyFdIEludmFsaWQgaW5wdXQnKQogIHRpbWUuc2xlZXAoMSkKICBleGl0KCkKZXhjZXB0IEtleWJvYXJkSW50ZXJydXB0OgogIHByaW50KCdcblshXSBDVFJMICsgQyBERVRFQ1RFRCcpCiAgdGltZS5zbGVlcCgxKQogIGV4aXQoKQpleGNlcHQgcmVxdWVzdHMuQ29ubmVjdGlvbkVycm9yOgogICAgICBwcmludCgnWyFdIE5ldHdvcmsgZGlzY29ubmVjdGVkJykKICAgICAgdGltZS5zbGVlcCgxKQogICAgICBleGl0KCkK'))
